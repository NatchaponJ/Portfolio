<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/zeolu/OneDrive/Desktop/sql/PortfolioProject.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="8122"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,10:mainCovidDeath"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CovidDeath" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="70"/><column index="3" value="74"/><column index="4" value="73"/><column index="5" value="77"/><column index="6" value="84"/><column index="7" value="80"/><column index="8" value="152"/><column index="9" value="92"/><column index="10" value="88"/><column index="11" value="160"/><column index="12" value="161"/><column index="13" value="157"/><column index="14" value="229"/><column index="15" value="169"/><column index="16" value="165"/><column index="17" value="237"/><column index="18" value="128"/><column index="19" value="88"/><column index="20" value="165"/><column index="21" value="101"/><column index="22" value="178"/><column index="23" value="157"/><column index="24" value="234"/><column index="25" value="170"/><column index="26" value="247"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PercentPopulationVaccinated" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths/><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="peoplepervac" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="59"/><column index="3" value="40"/><column index="4" value="76"/><column index="5" value="124"/><column index="6" value="117"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">--looking at Total deaths vs Total cases

SELECT 

	Location, 

	date, 

	total_cases,total_deaths, 

	(total_deaths/total_cases)*100 as DeathPercentage

From CovidDeath

WHERE location like '%thai%'

order by 1,2

	
</sql><sql name="SQL 2">--looking at Total cases vs Poppulation

SELECT 

	location,

	date, 

	total_cases,

	population, 

	(total_cases/population)*100 as PoppulationPercentage

From CovidDeath

WHERE location like '%thai%'

order by 1,2

	
</sql><sql name="SQL 3">-- Countries with Highest Infection Rate compared to Population

Select 

	Location, 

	Population,

	max(total_cases) as HighestInfectionCount,  

	max((total_cases/population))*100 as PercentPopulationInfected

From CovidDeath

Group by Location, Population

order by PercentPopulationInfected desc
	
	
</sql><sql name="SQL 4">-- Countries with Highest Death Count per Population

SELECT

	location,

	max(cast(total_deaths as int)) as TotalDeathCount

from CovidDeath

WHERE continent is not NULL

GROUP by location

ORDER by TotalDeathCount DESC
	
	
</sql><sql name="SQL 5">SELECT *

FROM CovidDeath

WHERE continent is not NULL
	

</sql><sql name="SQL 6">-- Showing contintents with the highest death count per population

Select 

	continent, 

	MAX(cast(Total_deaths as int)) as TotalDeathCount

From CovidDeath

Where continent is not null 

Group by continent

order by TotalDeathCount desc
	
	
</sql><sql name="SQL 7">-- global numbers

SELECT

	SUM(new_cases) as total_cases, 

	SUM(cast(new_deaths as int)) as total_deaths, 

	SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage

From CovidDeath

where continent is not null

	

</sql><sql name="SQL 8">-- Total Population vs Vaccinations

-- Shows Percentage of Population that has recieved at least one Covid Vaccine



Select 

	dea.continent, 

	dea.location,

	dea.date,

	dea.population,

	vac.new_vaccinations,

	sum(CAST(vac.new_vaccinations as INT)) OVER (PARTITION by dea.location ORDER by dea.location, dea.date) as RollingPeopleVac

--(RollingPeopleVac/population)*100

From CovidDeath dea

Join CovidVacination vac

	On dea.location = vac.location

	and dea.date = vac.date

WHERE dea.continent is not NULL
	
	

</sql><sql name="SQL 9">-- use cte

WITH popVSvac (continent, location, date, population, new_vaccinations, RollingPeopleVac)

as

(

Select 

	dea.continent, 

	dea.location,

	dea.date,

	dea.population,

	vac.new_vaccinations,

	sum(CAST(vac.new_vaccinations as INT)) OVER (PARTITION by dea.location ORDER by dea.location, dea.date) as RollingPeopleVac

--(RollingPeopleVac/population)*100

From CovidDeath dea

Join CovidVacination vac

	On dea.location = vac.location

	and dea.date = vac.date

WHERE dea.continent is not NULL

)

SELECT *, (RollingPeopleVac/population)*100 as percentage
	


FROM popVSvac</sql><sql name="SQL 10">-- TEMP TABLE



CREATE TABLE PercentPopulationVaccinated (

continent nvarchar(255),

location nvarchar(255),

date datetime,

population NUMERIC,

new_vaccinations NUMERIC,

RollingPeopleVac NUMERIC

)

INSERT INTO PercentPopulationVaccinated

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations

, SUM(CAST(vac.new_vaccinations as INT)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVac

--, (RollingPeopleVac/population)*100

From CovidDeath dea

Join CovidVacination vac

	On dea.location = vac.location

	and dea.date = vac.date

-- where dea.continent is not null 

--order by 2,3

SELECT *, (RollingPeopleVac/population)*100 as percentage

FROM PercentPopulationVaccinated
	
	
</sql><sql name="SQL 11">-- Creating View to store data for later visualizations


Create View poppervac as

Select 

	dea.continent, 

	dea.location, 

	dea.date, 

	dea.population, 

	vac.new_vaccinations, 

	SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVacc

From CovidDeath dea

Join CovidVacination vac

	On dea.location = vac.location

	and dea.date = vac.date

where dea.continent is not null 

	
</sql><sql name="SQL 12">
	SELECT * FROM PercentPopulationVaccinated
	</sql><current_tab id="11"/></tab_sql></sqlb_project>

-- people fully vacinated vs population in thailand

SELECT
	d.date,
	d.location,
	d.population,
	v.total_vaccinations,
	v.people_fully_vaccinated,
	(v.people_fully_vaccinated/d.population)*100 FullyVacPercent
FROM CovidVacination v
JOIN CovidDeath d
	on v.date = d.date
	AND v.location = d.location
WHERE d.location like 'thai%' AND v.total_vaccinations is not NULL
ORDER by d.date
